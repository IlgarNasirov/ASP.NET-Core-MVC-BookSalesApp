@model BookSalesApp.DTOs.HomeResponseDTO
@{
    ViewData["title"]="Dashboard";
    ViewData["dashboard"] = "active";
    Layout = "../Shared/_LayoutAdmin.cshtml";
}
<div class="container-fluid px-4">
    <div class="row g-3 my-2">
        <div class="col-sm-12 col-md-6 col-lg-4">
            <div class="p-3 bg-white shadow-sm d-flex justify-content-around align-items-center rounded">
                <div>
                    <h3 class="fs-2">@Math.Round(Model.TotalSales,2)$</h3>
                    <p class="fs-5">Total sales</p>
                </div>
                <i class="fas fa-money-bill-wave fs-1 primary-text border rounded-full secondary-bg p-3"></i>
            </div>
        </div>

        <div class="col-sm-12 col-md-6 col-lg-4">
            <div class="p-3 bg-white shadow-sm d-flex justify-content-around align-items-center rounded">
                <div>
                    <h3 class="fs-2">@Model.Users</h3>
                    <p class="fs-5">Users</p>
                </div>
                <i class="fas fa-user fs-1 primary-text border rounded-full secondary-bg p-3"></i>
            </div>
        </div>

        <div class="col-sm-12 col-md-6 col-lg-4">
            <div class="p-3 bg-white shadow-sm d-flex justify-content-around align-items-center rounded">
                <div>
                    <h3 class="fs-2">@Math.Round(Model.TodayTotalSales,2)$</h3>
                    <p class="fs-5">Today's total sales</p>
                </div>
                <i class="fas fa-money-check-alt fs-1 primary-text border rounded-full secondary-bg p-3"></i>
            </div>
        </div>
    </div>
    <div class="mt-4" style="position: relative; height:60vh; width:60vw">
        <canvas id="chart"></canvas>
    </div>
</div>
<script src="~/npm/chart.js"></script>
<script>
    
    const ctx = document.getElementById('chart');
        const endPoint = "/Admin/PopularGenres";
        const l=[];
        const d=[];
        fetch(endPoint, {
            method: 'GET'
        })
        .then(response => response.json())
        .then(data => {data.forEach(element => { 
            l.push(element.genre); 
            d.push(parseInt(element.count))
        })
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: l,
                    datasets: [{
                        label: 'The Most popular genres',
                        data: d,
                        borderWidth: 1,
                        backgroundColor: ['#ffce56', '#36a2eb', '#cc65fe']
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        })
        .catch(error => console.log(error));
</script>